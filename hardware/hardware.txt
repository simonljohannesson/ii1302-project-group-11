För att köra sensorn krävs denna kod:

volatile uint16_t distance=0;
VL53L0X.address=0x52;//0x29 IoT adress -> 8-bit i 0x?? format 7-bit requires move 1 bit;

uint8_t tof_rev_id = VL53L0X_readReg(IDENTIFICATION_REVISION_ID);//Read the revision_ID of sensor, good first test for communication

if(!VL53L0X_init(true)) Error_Handler();//run INIT - Check datasheet for all instances.

VL53L0X_setTimeout(500);

VL53L0X_startContinuous(0);//start reading sensor data -> set timeout period on 0ms

HAL_Delay(5);//time buffer for settings to establish properly

while (1)
  {
	  distance = VL53L0X_readRangeContinuousMillimeters();
	  //distance = distance -55;// -55 is to compensate for error. Change or set it to zero to make it work for your sensor
  }
  
  
  
Inställning för I2C:
100 kHz Speed frequency
7-Bit primary adress lenght

Alternate Function open drain & pull up för GPIO pin som kör SCL / SDA

====================================================================================================================================

För att köra wifi-modul krävs denna kod:

esp8266_test(); //Testfunktion för att se att kommunikation med MCU & Wifi-modul fungerar -> Allt är inkopplat korrekt

char SSID[] = "Tester"; //Skriv routers namn som önskas anslutas till
char PWD[] = "Qwerty91"; //Skriv lösenord för routern
esp8266_init(SSID,sizeof(SSID),PWD,sizeof(PWD)); //Skickar kod till ESP8266 modulen & försöker ansluta till wifi med ovan parametrar

char HostIP[] = "f35rw3.messaging.internetofthings.ibmcloud.com"; //Ange IP address till broker som ska anslutas mot
uint16_t HostPort = 8883; //Ange port som önskas anslutas mot
esp8266_connect(HostIP,HostPort); //Öppnar upp en TCP länk mellan ESP8266 & broker

/*Fungerar ej för närvarande*/
char mqttName[] = "use-token-auth"; //Skriv in användarnamn för access till broker
char mqttToken[] = "UwYL)BpD!O7Y&-Ah?u";//Skriv in lösenord för access till broker
char publish[] = "iot-2/evt/1/fmt/JSON";//Address för publish sidan
esp8266_transmit(mqttName,strlen(mqttName),mqttToken,strlen(mqttToken),publish,strlen(publish));//Returns OK | error -> specify for handler
/* ---- */

esp8266_disconnect(); //För att avsluta TCP länken

